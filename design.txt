Agents run checks
What checks to run are configured by config file
Agent sends statuses to server
Server saves statuses
Server calculates health for each check
Server notifies email on errors

When server receives new check from an agent it will keep tracking that (agent, check) configuration
When the server does not receive a check within the expected timeframe it will count the (agent, check) combination as expired
When an agent changes the interval for a check, the server accepts the new interval. (it might notify and keep in event log)
An agent might keep track of what checks its sent to be able to notify server when a check has been discontinued.

The agent connects to server using https and tofu of the certificate.



A namespace can be set on a check to be used by the server for categorising checks.
Checks should have a default namespace generated by their settings and some might fetch hostname of the host they are running on

for example
"net:www.test.com"  		# for a http-up check of a site
"net:www.test.com:from-vpn"  	# for a http-up check of a site from a vpn
"machine:foobar"     		# for a cpu check on a machine

this might be presented on the server as:

"""
net
  www.test.com
    - http-up good
    - tls     good
    from-vpn
      - http-up  fail
      - tls  	 fail

machine
  foobar
    - cpu     good
    - mem     good
"""



ping_check:
  namespace: "net:test.com"
  host: "test.com"


cert_expiry_check:
  namespace: "net:test.com"
  host: "test.com"
  days: 30

disk_check:
  namespace: "machine:homeserver"
  mountpoint: "/"
  free: "30%"



df = {
  check-type: "disk_free",
  namespace: "namespace:homeserver",
  check-params: {
    mountpoint: "/",
    free-limit: "30%",
  }
}

cert = {
  check-type: "cert_expiry",
  namespace: "net:test.com"
  check-params: {
    host: "test.com",
    day-limit: 30
  }
}

http1 = {
  check-type: "http_up",
  namespace: "net:test.com",
  check-params: {
    host: "test.com"
    port: 80
    /* allowed status codes are 2xx, 3xx */
  }
}

http2 = {
  check-type: "http_up",
  namespace: "net:test.com",
  check-params: {
    host: "test.com",
    status_code: [200],
    port: 8081,
    tls: false
  }
}

http_rule = {
  check: http_check,
  interval: 100,
}


status_df = {
  check: df,
  status: "good",
  status-msg: "",
  timestamp: xxx
}

status_cert = {
  check: cert,
  status: "fail",
  status-msg: "Cert expires in 28 days",
  timestamp: xxx
}


server_check1 = {
  check = df,
  expected_agent = "homeserver",
}

server_result = {
  check = df,
  status: status_df,   # may be timeout
  last-recieved: status_df,
  last-good: status_df,
  last-fail: status_df,
}


server_settings = {
  allow_checks_from_any_agent: False,
}

status, result, check, rule, info,
