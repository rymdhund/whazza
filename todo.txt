TODO:
- Agent should fetch last run for checks from hub
- Use env WHAZZA_DATA_DIR for hub generated key, cert and db files
- Serve webpage for health overview (needs users etc)
- Add "error" status for when the checker is not able to run correctly, eg no internet connection etc
- Add check-in checker to be used from external programs, eg backup that wants to notify that it has run
- Add dns checker that does whois and sees if domain is about to expire
- Add command in server on how to make a curl command with --pinnedpubkey to do a check-in
- Getting this error in http and cert checks: dial tcp: lookup www.foo.com on 127.0.0.11:53: read udp 127.0.0.1:43945->127.0.0.11:53: i/o timeout. Maybe try again if we have dns lookup problem?
- Debian check for needs-restart, security updates, something more?
- Rename server to hub everywhere
- Investigate potential race conditions for monitor and mail sending
- Cache agent authentication in memory instead of reading from db every time
- Do we want to have a separate notification worker?


Done
- Error saving checkresult: Couldn't add result: database table is locked: results
- when server starts, wait until checks have had a chance to send their results before counting checks as expired. (pretend last received result is the server start time)
- Switch to curl style pinned key. Then I only need one implementation.
- cert-check to see that cert is good and doesnt expire in $n days
- Make constructor for result, one for Good, one for Fail
- Bug: Error saving checkresult: Couldn't add result: database is locked
- Rename http-up-check to http-up-checker
- Make a check expire after (Interval / 2), but at least 10min and at most 4h
- Make all parameters in json snake_case
- Https-up check
- Https-up check
- Send notification mail when result changes
- when a check comes in with a new interval, accept the new interval
- agent daemon mode
- agent checks.json config file
- `whazza show` to show health for checks
- generate cert on hub
- accept cert using tofu on agent
- `whazza fingerprint` command to show cert fingerprint
- `whazza-agent init ...` to generate config.json
- accept agent on hub (whazza register username <token-hash>)
- only accept registered agents on hub
- Use (agent, namespace, checkType, checkParams) as key for checks
